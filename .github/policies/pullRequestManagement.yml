# See repository policies at ../../REPO_POLICIES.md
# ===========================================================================
# GitHub Repository Pull Request Management Policy
# ===========================================================================
# Purpose: Automate PR workflow management for for this repository
# This policy handles PR creation, validation, and provides appropriate guidance to contributors
id: 
name: GitOps.PullRequestIssueManagement
description: Handlers for when a Pull Request is first opened
owner: Arc Jumpstart
resource: repository
disabled: false
where:
configuration:
  resourceManagementConfiguration:
    # ===========================================================================
    # EVENT RESPONDER TASKS
    # Defines automated actions triggered by specific GitHub events
    # These tasks handle the entire PR lifecycle from creation to resolution
    # ===========================================================================
    eventResponderTasks:
      # ---------------------------------------------------------------------------
      # EMPTY PR DETECTION
      # Automatically identifies and closes PRs without file changes
      # This prevents empty PRs from cluttering the repository
      # ---------------------------------------------------------------------------
      - description: >-
         When a PR is opened/updated, if no files are modified
          * Close the PR
          * Add a comment
        if:
          # Only process open pull requests
          - payloadType: Pull_Request
          - isOpen
          # Trigger on new PR creation or when commits are pushed
          # This ensures we catch empty PRs both on creation and after force pushes
          - or:
              - isAction:
                  action: Opened
              - isAction:
                  action: Synchronize
          # Check for empty file patterns
          # The regex ^$ matches when no files have been changed
          - filesMatchPattern:
                pattern: ^$
        then:
          # Provide a helpful message explaining why the PR is being closed
          - addReply:
              reply: |
                ‚ö†Ô∏è **WARNING: Empty Pull Request** ‚ö†Ô∏è
                
                üëã Hello ${issueAuthor},

                This pull request does not update any files. Please review your commit history and resubmit.

                We will be closing this pull request now, thank you for your collaboration!

          # Add abandoned label to track automatically closed empty PRs
          - addLabel:
              label: Abandoned

          - closePullRequest

      # ---------------------------------------------------------------------------
      # EXEMPT USER PR TO MAIN BRANCH
      # Allow specific team members to create PRs against main branch
      # This creates an exception for maintainers who need direct access to main
      # ---------------------------------------------------------------------------
      - description: When an exempt user opens a PR against the main branch, allow it
        if:
          # Only process open pull requests targeting the main branch
          - payloadType: Pull_Request
          - isOpen
          # Trigger on new PR creation or when commits are pushed
          - or:
              - isAction:
                  action: Opened
              - isAction:
                  action: Synchronize
          # Ensure the target branch is main
          - targetsBranch:
                branch: main
          # Check if the author is likamrat (the exempt user)
          # To add more exempt users, create additional similar rules with different usernames
          # or add more 'not isActivitySender' conditions in the MAIN BRANCH PROTECTION rule below
          - or: 
            - isActivitySender:
                  user: likamrat
            # - isActivitySender:
            #       user: kianaharris4
        then:
          # Add a label to track exempt PRs for auditing purposes
          - addLabel:
              label: Exempt-Maintainer
          # Post a welcome message specific to maintainers
          - addReply:
              reply: |
                üëã Hello ${issueAuthor},
                
                This PR has been allowed to target the main branch directly because you are an exempt maintainer üëë
                
                Thank you for your contribution!

      # ---------------------------------------------------------------------------
      # MAIN BRANCH PROTECTION
      # Prevents direct contributions to main branch and redirects to canary
      # This enforces our gitflow process where changes go through canary first
      # ---------------------------------------------------------------------------
      - description: >- 
         When a PR is opened against the main branch, close it and add a comment
        if:
          # Only process open pull requests targeting the main branch
          - payloadType: Pull_Request
          - isOpen
          # Trigger on new PR creation or when commits are pushed
          # This ensures we catch PRs targeting main both on creation and after force pushes
          - or:
              - isAction:
                  action: Opened
              - isAction:
                  action: Synchronize
          # Ensure the target branch is main
          - targetsBranch:
                branch: main
          # Exclude PRs with no files modified - these are handled by a different rule
          - not:
              filesMatchPattern:
                  pattern: ^$
          # Exclude exempt users - make sure they don't match this rule
          # Add additional 'not' conditions here for each exempt user
          - not:
              or: 
                - isActivitySender:
                      user: likamrat
                # - isActivitySender:
                #       user: kianaharris4
        then:
          # Provide educational feedback about our branch workflow
          - addReply:
              reply: |
                ‚ö†Ô∏è **WARNING: Wrong Target Branch** ‚ö†Ô∏è
                
                üëã Hello ${issueAuthor},

                This pull request was made directly against the repository `main` branch, which we do not allow. We kindly ask you to update or open a new pull request against the [`canary`](https://github.com/Azure/arc_jumpstart_docs/tree/canary/) branch instead. Please note that the `canary` branch serves as our integration environment where documentation changes are first reviewed, tested, and refined before being promoted to the main branch for official publication. This workflow ensures our documentation maintains high quality and consistency.
                
                We will be closing this pull request now.
                
                Thank you for your collaboration!

          # Add abandoned label to track automatically closed PRs
          - addLabel:
              label: Abandoned

          - closePullRequest

      # ---------------------------------------------------------------------------
      # WELCOME MESSAGE FOR CONTRIBUTORS
      # Provides guidance and sets expectations for PR authors
      # This helps set the tone for collaboration and ensures contributors understand the process
      # ---------------------------------------------------------------------------
      - description: 
         When a PR is opened, post a message to the author
        if:
          # Only process new pull requests
          - payloadType: Pull_Request
          - isAction:
              action: Opened
          # Exclude empty PRs since they're handled by a different rule
          - not:
              filesMatchPattern:
                pattern: ^$
          # Exclude PRs targeting main branch - these are handled by a separate rule
          - not:
              targetsBranch:
                branch: main
        then:
          # Add automated welcome message with contribution guidelines
          - addReply:
              reply: |
                üëã Hello ${issueAuthor},

                Thank you for your pull request, a team member will review it soon. All issues and pull requests are validated by the Arc Jumpstart team and must pass all validation checks before being merged.
                
                By submitting this pull request, you agree that your contributions will be licensed under the [MIT license](https://github.com/microsoft/azure_arc/blob/main/LICENSE-CODE) license and you confirm that you've read and will abide by our [Code of Conduct](https://github.com/microsoft/azure_arc/blob/main/CODE_OF_CONDUCT.md).

# ---------------------------------------------------------------------------
# ERROR HANDLING CONFIGURATION
# Defines what happens when policy execution succeeds or fails
# ---------------------------------------------------------------------------
onFailure:
  # Can be configured to notify admins or log errors
onSuccess:
  # Can be configured to perform actions upon successful execution
